#!/bin/bash
set -e

##########################################################################
#  Script d‚Äôinstallation et configuration syst√®me                        #
#  Licence : Charles Van den Driessche                                    #
#  Auteur  : @neomnia                                                     #
##########################################################################

# Ensure running under bash
if [ -z "$BASH_VERSION" ]; then
  echo "Switching to bash..."
  exec bash "$0" "$@"
fi

##########################################
#      üé® D√©finition des couleurs         #
##########################################
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
BOLD="\033[1m"
RESET="\033[0m"

log() {
  echo -e "${CYAN}[Neomnia]${RESET} $1"
}

ok() {
  echo -e "${CYAN}[Neomnia]${RESET} ${GREEN}‚úî $1${RESET}"
}

warn() {
  echo -e "${CYAN}[Neomnia]${RESET} ${YELLOW}‚ö† $1${RESET}"
}

err() {
  echo -e "${CYAN}[Neomnia]${RESET} ${RED}‚úñ $1${RESET}"
}


##########################################
#            V√©rif root                  #
##########################################
if [ "$EUID" -ne 0 ]; then
  err "Ce script doit √™tre ex√©cut√© en root."
  exit 1
fi

##########################################
#           Hostname setup               #
##########################################
read -p "Nom du nouvel hostname : " NEW_HOSTNAME
log "Configuration du hostname ‚Üí $NEW_HOSTNAME"
hostnamectl set-hostname "$NEW_HOSTNAME"
grep -q "127\.0\.1\.1" /etc/hosts \
  && sed -i "s/127\.0\.1\.1.*/127.0.1.1\t$NEW_HOSTNAME/" /etc/hosts \
  || echo -e "127.0.1.1\t$NEW_HOSTNAME" >> /etc/hosts
echo "$NEW_HOSTNAME" > /etc/hostname
ok "Hostname configur√© en $NEW_HOSTNAME"


##########################################
#          User & Group setup            #
##########################################
read -p "Nom du nouvel utilisateur : " NEW_USER_NAME
if id "$NEW_USER_NAME" &>/dev/null; then
  warn "L‚Äôutilisateur $NEW_USER_NAME existe d√©j√†."
  SKIP_USER=1
else
  useradd -m -s /bin/bash "$NEW_USER_NAME"
  read -s -p "Mot de passe pour $NEW_USER_NAME : " NEW_USER_PASSWORD
  echo
  echo "$NEW_USER_NAME:$NEW_USER_PASSWORD" | chpasswd
  ok "Utilisateur $NEW_USER_NAME cr√©√©."

  echo "$NEW_USER_NAME ALL=(ALL) NOPASSWD:ALL" | tee "/etc/sudoers.d/$NEW_USER_NAME"
  ok "Ajout √† sudoers."
fi

read -p "Nom du groupe (d√©faut gitusers) : " GROUP_NAME
GROUP_NAME=${GROUP_NAME:-gitusers}
if ! getent group "$GROUP_NAME" >/dev/null; then
  groupadd "$GROUP_NAME"
  ok "Groupe $GROUP_NAME cr√©√©."
else
  warn "Groupe $GROUP_NAME d√©j√† existant."
fi

echo "%$GROUP_NAME ALL=(ALL) NOPASSWD:ALL" | tee "/etc/sudoers.d/$GROUP_NAME"
usermod -a -G "$GROUP_NAME" "$NEW_USER_NAME"

# Permissions sur /opt avec ACL
chown -R root:"$GROUP_NAME" /opt
chmod -R 2775 /opt
setfacl -R -m g:$GROUP_NAME:rwx /opt
ok "Droits r√©cursifs appliqu√©s sur /opt avec ACL pour $GROUP_NAME."


##########################################
#            Packages & UFW              #
##########################################
log "Mise √† jour du syst√®me..."
apt update && apt upgrade -y
ok "Syst√®me √† jour."

log "Installation des outils de base (curl, git, ufw, tree, wget, jq, acl)..."
apt install -y tree ufw git curl wget jq acl
ok "Paquets install√©s."

log "Configuration du pare-feu UFW..."
ufw allow OpenSSH
ufw --force enable
ok "Pare-feu activ√©."


##########################################
#        Git Config + GitHub API         #
##########################################
read -p "Email Git : " GIT_EMAIL
read -p "Nom Git : " GIT_CONF_USERNAME
git config --global user.email "$GIT_EMAIL"
git config --global user.name "$GIT_CONF_USERNAME"
ok "Configuration Git appliqu√©e."

read -p "GitHub username: " GITHUB_USERNAME
read -s -p "GitHub API key: " GITHUB_API_KEY
echo

log "V√©rification des droits GitHub API..."
RESPONSE=$(curl -s -H "Authorization: token $GITHUB_API_KEY" https://api.github.com/user)
if echo "$RESPONSE" | jq -e '.login' >/dev/null; then
  USER_LOGIN=$(echo "$RESPONSE" | jq -r '.login')
  ok "Connexion GitHub OK ‚Üí $USER_LOGIN"
else
  err "Impossible de valider la cl√© API GitHub."
  exit 1
fi


##########################################
#            V√©rification finale          #
##########################################
echo -e "\n${MAGENTA}${BOLD}############## V√©rification finale ##############${RESET}"
[[ -n "$NEW_HOSTNAME" ]] && ok "Hostname configur√©."
[[ -n "$NEW_USER_NAME" ]] && ok "Utilisateur $NEW_USER_NAME pr√™t."
[[ -n "$GROUP_NAME" ]] && ok "Groupe $GROUP_NAME appliqu√© √† /opt avec ACL."
[[ -n "$USER_LOGIN" ]] && ok "GitHub API valide pour $USER_LOGIN."
echo -e "${MAGENTA}${BOLD}##############   Setup complet   ##############${RESET}\n"
