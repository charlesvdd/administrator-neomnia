#!/usr/bin/env bash
# kickstart-versioning.sh (root-aware)
set -e

# 0) auto-√©l√©vation
if [[ "$(id -u)" -ne 0 ]]; then
  SUDO="sudo"
else
  SUDO=""
fi

# 1) V√©rification de la CLI Git
if ! command -v git >/dev/null; then
  echo "‚ùå Git n'est pas install√©."
  exit 1
fi
echo "‚úÖ Git CLI d√©tect√©e : $(git --version)"

# 2) V√©rif/ajout du remote origin + test connexion
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  if git remote get-url origin >/dev/null 2>&1; then
    REMOTE_URL=$(git remote get-url origin)
    echo "‚ÑπÔ∏è Remote 'origin' d√©tect√© ‚Üí $REMOTE_URL"
  else
    read -p "URL du remote origin : " REMOTE_URL
    git remote add origin "$REMOTE_URL"
    echo "Remote 'origin' ajout√© ‚Üí $REMOTE_URL"
  fi
  echo "Test de connexion √† origin‚Ä¶"
  git ls-remote origin >/dev/null
  echo "‚úÖ Connexion r√©ussie."
else
  echo "‚ö†Ô∏è Pas dans un d√©p√¥t Git ‚Äî repos initialis√© plus bas."
fi

# 3) Config interactif (VERSION_FILE, TAG_PREFIX, INITIAL_VERSION, COMMIT_MSG)
# ‚Ä¶ (inchang√©)

# 4) Init d√©p√¥t + cr√©ation VERSION + tag initial
# ‚Ä¶ (inchang√©)

# 5) G√©n√©ration de bump_version.sh
# ‚Ä¶ (inchang√©)

echo "üéâ Pr√™t ! Lancez ./bump_version.sh {patch|minor|major}"
